apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: ufo
  name: ufo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ufo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ufo
    spec:
      containers:
      - image: btwiuse/arch:ufo
        name: ufo
        ports:
        - containerPort: 3000
          hostPort: 302
          protocol: UDP
        - containerPort: 3000
          protocol: TCP
        env:
        - name: PORT
          value: "3000"
        - name: HOST
          value: ufo.k0s.io
        - name: ALT_SVC
          value: webteleport=":302"
        - name: CERT
          value: /tls/tls.crt
        - name: KEY
          value: /tls/tls.key
        command:
        - bash
        - -c
        args: 
        - |
          ufo station
          curl https://k0s.io/install.sh | bash
          git config --global user.name navigaid
          git config --global user.email navigaid@gmail.com
          git clone https://github.com/webteleport/webteleport /webtransport
          git clone https://github.com/webteleport/ufo /ufo
          cd /ufo
          go mod tidy
          GOBIN=/usr/local/bin go install ./cmd/ufo
          tmux new-session -d -s pacman-Syu pacman -Syu --noconfirm
          ufo station
        volumeMounts:
        - mountPath: /tls
          name: tls
      restartPolicy: Always
      volumes:
      - secret:
          secretName: ufo.k0s.io
        name: tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
    ingress.kubernetes.io/ssl-redirect: "true"
    ingress.kubernetes.io/force-ssl-redirect: "true"
  name: ufo.k0s.io
spec:
  rules:
  - host: ufo.k0s.io
    http:
      paths:
      - backend:
          service:
            name: ufo
            port:
              number: 3000
        path: /
        pathType: ImplementationSpecific
  - host: '*.ufo.k0s.io'
    http:
      paths:
      - backend:
          service:
            name: ufo
            port:
              number: 3000
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - ufo.k0s.io
    - '*.ufo.k0s.io'
    secretName: ufo.k0s.io
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ufo.k0s.io
spec:
  dnsNames:
  - ufo.k0s.io
  - '*.ufo.k0s.io'
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: letsencrypt
  secretName: ufo.k0s.io
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: ufo
  name: ufo
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: ufo
  type: ClusterIP
